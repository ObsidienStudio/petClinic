pipeline {
    agent any

    stages {
        stage("Build") {
            steps {
                echo "Building..."
                step ([$class: "CopyArtifact",
                        projectName: "petClinic",
                        target: "C:/Users/33767/Documents/GitHub/petClinic"]
                );
                echo "Building finished"
            }
        }

        stage("Deploy") {
            steps {
                bat "copy C:\\Users\\33767\\Documents\\GitHub\\petClinic\\target C:\\Users\\33767\\Documents\\CODE\\cefim-jenkins-box\\cefim-jenkins-box-master\\data *.jar"
                bat "cd C:\\Users\\33767\\Documents\\CODE\\cefim-jenkins-box\\cefim-jenkins-box-master\\ && vagrant up"
               // bat "cd C:\\Users\\33767\\Documents\\CODE\\cefim-jenkins-box\\cefim-jenkins-box-master\\ && vagrant ssh"
                
            }
        }
        stage("TEST"){
  def remote = [:]
  remote.name = "vagrant"
  remote.host = "localhost"
  remote.user = "vagrant"
  remote.password = "vagrant"
  remote.allowAnyHosts = true
  stage("Remote SSH") {
      steps{
    sshCommand remote: remote, command: "cd data"
    sshCommand remote: remote, command: "java -jar spring-petclinic-2.3.1.BUILD-SNAPSHOT.jar server.port=8881"
      }
  }
    }
    }
}