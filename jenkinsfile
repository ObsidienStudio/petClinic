pipeline {
    agent any

        def remote = [:]
        remote.name = "node"
        remote.host = "node.abc.com"
        remote.allowAnyHosts = true


    stages {
        stage('Build') {
            steps {
                echo "Building..."
                step ([$class: 'CopyArtifact',
                        projectName: 'petClinic',
                        target: 'C:/Users/33767/Documents/GitHub/petClinic']
                );
                echo "Building finished"
            }
        }

        stage('Deploy') {
            steps {
                bat 'robocopy C:\\Users\\33767\\Documents\\GitHub\\petClinic\\target C:\\Users\\33767\\Documents\\CODE\\cefim-jenkins-box\\cefim-jenkins-box-master\\data *.jar /MOVE'
                bat 'cd C:\\Users\\33767\\Documents\\CODE\\cefim-jenkins-box\\cefim-jenkins-box-master\\ && vagrant up'
                bat 'cd C:\\Users\\33767\\Documents\\CODE\\cefim-jenkins-box\\cefim-jenkins-box-master\\ && vagrant ssh'
            }
        }
        withCredentials([usernamePassword(credentialsId: 'vagrant', passwordVariable: 'vagrant', usernameVariable: 'vagrant')]) {
            remote.user = userName
            remote.password = password

            stage("SSH Steps Rocks!") {
                sshScript remote: remote script:'cd data'
                sshScript remote: remote script:"java -jar spring-petclinic-2.3.1.BUILD-SNAPSHOT.jar server.port=8881"
            }
        }
    }
}